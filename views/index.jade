extends layout

mixin li(name, val)
  if val
    li(id="##{name}") #{name}: #{val}
  else
    li(id="##{name}") #{name}:

mixin parser(meta, ua, os)
  .parser(id="##{meta.name}")
    p According to&nbsp;
      a(href="#{meta.repo}") #{meta.name}
      |  #{meta.version}.

    .parser-results
       h2 user agent
       ul
         if ua
           mixin li("raw", ua.rawUa)
           mixin li("string", ua.string)
           mixin li("family", ua.family)
           mixin li("major", ua.major)
           mixin li("minor", ua.minor)
           mixin li("patch", ua.patch)
           mixin li("device", ua.device)
         else
           mixin li("raw")
           mixin li("string")
           mixin li("family")
           mixin li("major")
           mixin li("minor")
           mixin li("patch")
           mixin li("device")

       h2 os
       ul
         if os
           mixin li("string", os.string)
           mixin li("family", os.family)
           mixin li("major", os.major)
           mixin li("minor", os.minor)
           mixin li("patch", os.patch)
         else
           mixin li("string")
           mixin li("family")
           mixin li("major")
           mixin li("minor")
           mixin li("patch")

block content
  .top
    h1= title
    form(action="/", method="post")
      label(for="custom-ua-string") Enter a ua string:
      input(name="custom-ua-string", id="custom-ua-string", value="#{ua.rawUa}", size=80)
      button(type="submit") Go!

  mixin parser(meta, parsed.ua, parsed.os)
  mixin parser(uaParserJsMeta, null, null)

  .api
    :markdown
      ## API

      `GET /api/v1?ua=<ua-string>&version=<ua-parser-version>`

      Parameters:

      * `ua-string`: Be sure to url-encode it. Defaults to your request\'s user agent string.
      * `ua-parser-version`: Coming soon. Defaults to "latest".
