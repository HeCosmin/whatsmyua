extends layout

mixin li(name, val)
  if val
    li(id="#{name}") #{name}: #{val}
  else
    li(id="#{name}") #{name}:

mixin result(type, data)
  h2= type
  ul
    if data
      each val, key in data
        mixin li(key, val)

mixin parser(meta, ua, os, device)
  .parser(id="#{meta.name}")
    p According to&nbsp;
      a(href="#{meta.repo}") #{meta.name}
      |  #{meta.version}.

    .parser-results
      mixin result("ua", ua)
      mixin result("os", os)
      mixin result("device", device)

block content
  .top
    h1= title
    form(action="/", method="post")
      label(for="custom-ua-string") Enter a ua string:
      input(name="custom-ua-string", id="custom-ua-string", value="#{ua.rawUa}", size=80)
      button(type="submit") Go!

  mixin parser(meta, parsed.ua, parsed.os, {device: parsed.ua.device})
  mixin parser(uaParserJsMeta, null, null, null)

  .api
    :markdown
      ## API

      `GET /api/v1?ua=<ua-string>&version=<ua-parser-version>`

      Parameters:

      * `ua-string`: Be sure to url-encode it. Defaults to your request\'s user agent string.
      * `ua-parser-version`: Coming soon. Defaults to "latest".
